<html xmlns:svg="http://www.w3.org/2000/svg">

<!--
TODO:
sendToFlash method that just takes a flashMsg object
expose flashObj so that I can call methods exposed on it through ExternalInterface externally
but only on root node
-->

<head>
  <!-- 
    The 'lightWeight' attribute below is important for two reasons:
    * It vastly improves performance
    * There is a bug that Behaviors are not cached correctly, so without
      this property the same HTC file will get called for every SVG element
      on the page. The lightWeight property sidesteps this bug.
  -->
  <public:component lightWeight="true">
       
      <public:attach event="oncontentready" onevent="contentReady()" />
      
      <public:defaults tabStop="false" contentEditable="false"
                        canHaveHTML="true" viewInheritStyle="true"
                        viewMasterTab="false" viewLinkContent="false"
                        style="display: block" />

  </public:component>

  <script type="text/javascript">
      /** Called when the content is ready for some SVG tag in the HTML
          page. This method is called for each individual SVG tag. */
      function contentReady() {
        this._handler = svgweb.handlers[element.id];
        this._handler.document.documentElement._htcLoaded(element.document, this);
      }
      
      /** Does some magic to have the Flash object show up in our SVG 
          root element 'hidden' from the external DOM. Called by
          FlashHandler._insertFlash() inside of svg.js.
          
          @param flash Flash DOM OBJECT/EMBED ready to be inserted. */
      this._insertFlashForIE = function(flash) {
        console.log('insertFlashForIE');
        /**
          We use a Behavior ViewLink trick to 'hide' this shadow content from 
          the external page, so that we don't see the Flash object in the 
          external DOM. For more details on ViewLinks: 
          
          http://msdn.microsoft.com/en-us/library/ms531428(VS.85).aspx
          
          Note, though, that we want to keep almost all of our SVG elements
          'lightWeight' (see the lightWeight attribute on the
          public:component tag at the top of this file) because
          non-lightWeight components have performance and caching issues.
          LightWeight HTC components however can not use View Links or have
          shadow content.
          
          As a trick, we 'convert' ourselves into having a shadow DOM
          just for the SVG root tag by manually creating an HTML document below,
          then storing this document in this._doc for later retrieval.
          For the trick to work we also have to set some public:defaults
          above at the top of this file.
          
          This approach successfully keeps the performance benefits of
          lightWeight HTCs while being able to have shadow content that
          doesn't show up in the external DOM.
        */
        var html = element.document.createElement('html');
        var body = element.document.createElement('body');
        body.appendChild(flash);
        html.appendChild(body);
        defaults.viewLink = html.document; // ViewLink magic
        this._doc = html.document;
      }
  </script>
</head>
</html>